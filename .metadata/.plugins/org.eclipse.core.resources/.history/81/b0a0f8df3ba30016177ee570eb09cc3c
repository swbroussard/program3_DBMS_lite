import java.sql.*;
import java.io.*;

/*=========================================================================
 |   Assignment:  Program #3: JDBC  
 |       Author: Steven Broussard (stevenwbroussard@email.arizona.edu)
 |       Grader: Zhenge Zhoa 
 |
 |       Course: CSC 460
 |   Instructor: L. McCann
 |     Due Date: November 3, 2016 12:29PM (late: 1 day)
 |
 |  Description: connects to the oracle database and 
 |               have a user interface or view with a few query questions 
 |               parents might be interested to know about the schools.
 |
 |     Language: Java JE 1.8
 | Ex. Packages: 
 |                
 | Deficiencies: none as of right now
 *=======================================================================*/
public class Prog3 {
	
	//global instance variable for SQL queries
	private static SQLCommandLibrary comd = new SQLCommandLibrary();
	
	/*---------------------------------------------------------------------
    |  Method: topFivePercentage
    |
    |  Purpose: user selects the percentage and output the top five schools
    |           per school year. Other words there will be four lists of the
    |           top five schools in that year.
    |
    |  Pre-condition: none
    |
    |  Post-condition: none
    |
    |  Parameters: String percentage - the user choice of percents
    |              Statement stat - Statement object to execute SQL queries
    |
    |  Returns: void
    *-------------------------------------------------------------------*/
	private static void topFivePercentage(String percent, Statement stat) {
		ResultSet ans = null;
		String[] tables = new String[4];
		ResultSetMetaData ansMetaData = null;
		
		tables[0] = "stevenwbroussard.WRCT_98_99";
		tables[1] = "stevenwbroussard.WRCT_00_01";
		tables[2] = "stevenwbroussard.WRCT_02_03";
		tables[3] = "stevenwbroussard.WRCT_04_05";
		
		try {
			ans = stat.executeQuery(comd.whichPercent(percent, tables[0]));
		}
		catch(SQLException s) {
			System.out.println("SQL persent statement failed.");
			s.printStackTrace();
			System.exit(-1);
		}
		
		try {
			ansMetaData = ans.getMetaData();
		}
		catch(SQLException s) {
			System.out.println("grabing meta data failed.");
			s.printStackTrace();
			System.exit(-1);
		}
		
		try {
			for (int i = 1; i <= ansMetaData.getColumnCount(); i++) {
				System.out.print(ansMetaData.getColumnName(i) + "\t");
			}
		}
		catch(SQLException s) {
			System.out.println("Grabbing column name fail from SQL.");
			System.exit(-1);
		}
		
		try {
			while (ans.next()) {
				System.out.println(ans.getString("schName") + "\t"
						+ ans.getDouble(percent));
			}
		}
		catch(SQLException s) {
			System.out.println("Grabbing tuple by column name failed.");
			s.printStackTrace();
			System.exit(-1);
		}
		
		System.out.println("");
		
	}
	
	public static void main(String[] vars) {
		Connection dbConnection = null;
		Statement stat = null;
		
		try {
			Class.forName("oracle.jdbc.OracleDriver");
		}
		catch(ClassNotFoundException c) {
			System.out.println("Can not find Class Driver.");
			c.printStackTrace();
			System.exit(-1);
		}
		
		//connect to the Oracle server
		try {
			dbConnection = DriverManager.getConnection(
				           "jdbc:oracle:thin:@aloe.cs.arizona.edu:1521:oracle"
				           ,vars[0], vars[1]);
		}
		catch(SQLException s) {
			System.out.println("Connection Failed.");
			s.printStackTrace();
			System.exit(-1);
		}
		
		//creates SQL statement query object
		try {
			stat = dbConnection.createStatement();
		}
		catch(SQLException s) {
			System.out.println("Making SQL Statement Object Failed.");
			s.printStackTrace();
			System.exit(-1);
		}
		
		//TODO: make user input scanner
		//TODO: choice one: for each of the school years and the different percentages,
		//      list the top 5 highest percentage school in descending order.
		topFivePercentage("perBasic", stat);
		
		//TODO: choice two: Given each school during the four years; list if the
		//      not tested percentage trend is strictly increasing, decreasing, or neither.
		//TODO: choice three: for each school during the four years; show by average amount
		//      of strictly increasing, decreasing, or about balanced.
	}
	
}
